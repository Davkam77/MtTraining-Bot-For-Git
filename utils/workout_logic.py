# utils/workout_logic.py

from utils.database import (
    get_user_profile,
    save_workout_settings,
    save_mealplan,
    save_daily_workout,
)
from utils.meal_api import get_meal_plan
from utils.workout_loader import generate_workout
from datetime import datetime

def auto_generate_after_metrics(user_id: int) -> str:
    profile = get_user_profile(user_id)
    if not profile:
        return "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."

    weight = profile["weight"]
    height = profile["height"]
    age = profile["age"]

    # –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–ª—å ‚Äì –º–∏–Ω—É—Å 8% –≤–µ—Å–∞
    goal_loss = round(weight * 0.08, 1)
    goal_weight = round(weight - goal_loss, 1)

    # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–ª–∞–Ω: 3 –º–µ—Å—è—Ü–∞ –ø–æ 45 –º–∏–Ω—É—Ç
    months = 3
    duration = 45

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    save_workout_settings(user_id, duration_minutes=duration, months=months)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–∞—Ü–∏–æ–Ω
    today = datetime.now().strftime("%Y-%m-%d")
    meal = get_meal_plan()
    save_mealplan(user_id, today, meal)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
    workout = generate_workout(user_id)
    save_daily_workout(user_id, today, workout)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    return (
        f"üéØ –¶–µ–ª—å: —Å–±—Ä–æ—Å–∏—Ç—å {goal_loss} –∫–≥ (–¥–æ {goal_weight} –∫–≥)\n"
        f"üìÖ –ü–ª–∞–Ω: {months} –º–µ—Å—è—Ü–∞, –ø–æ {duration} –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å\n\n"
        f"üçΩÔ∏è <b>–ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b>\n{meal}\n\n"
        f"üí™ <b>–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b>\n{workout}\n\n"
        f"‚è∞ –•–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —ç—Ç–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? –ù–∞–∂–º–∏ /wake –∏ –∑–∞–¥–∞–π —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è."
    )

from aiogram import Bot
from utils.openai_advisor import ask_openai

motivation_users = {}  # chat_id: (hour, minute)


def add_user_for_motivation(chat_id, hour, minute):
    motivation_users[chat_id] = (hour, minute)
    schedule_daily_motivation(chat_id, hour, minute)


def schedule_daily_motivation(chat_id, hour, minute):
    from utils.scheduler import scheduler
    job_id = f"motivation_{chat_id}"
    if scheduler.get_job(job_id):
        scheduler.remove_job(job_id)

    scheduler.add_job(send_daily_motivation,
                      "cron",
                      hour=hour,
                      minute=minute,
                      args=[chat_id],
                      id=job_id,
                      replace_existing=True)


async def send_daily_motivation(chat_id):
    prompt = (
        "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ—Ä–æ—Ç–∫–æ–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ—Ö—É–¥–µ–Ω–∏—è, –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã, —Å–∏–ª—ã –≤–æ–ª–∏. "
        "–¢–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –º–∞–∫—Å–∏–º—É–º 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Ç–æ–ª—å–∫–æ –ø–æ –¥–µ–ª—É.")
    try:
        text = await ask_openai(prompt)
    except Exception:
        text = "–°–µ–≥–æ–¥–Ω—è ‚Äî –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –ª—É—á—à–µ! üí™"
    bot = Bot.get_current()
    await bot.send_message(chat_id, f"üî• –ú–æ—Ç–∏–≤–∞—Ü–∏—è –¥–Ω—è:\n\n{text}")

# utils/workout_api.py
import os
import httpx
from dotenv import load_dotenv
from deep_translator import GoogleTranslator
import asyncio

load_dotenv()

API_KEY = os.getenv("GYM_API_KEY")
API_HOST = os.getenv("GYM_API_HOST")

HEADERS = {
    "X-RapidAPI-Key": API_KEY,
    "X-RapidAPI-Host": API_HOST
}

BASE_URL = f"https://{API_HOST}/exercise"

async def translate_async(text):
    loop = asyncio.get_event_loop()
    return await loop.run_in_executor(None, lambda: GoogleTranslator(source='en', target='ru').translate(text))

async def get_random_exercises(count=5):
    try:
        async with httpx.AsyncClient(timeout=10.0) as client:
            response = await client.get(BASE_URL, headers=HEADERS)
            response.raise_for_status()
            all_exercises = response.json()

        if not isinstance(all_exercises, list):
            return "‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ –≤ –æ–∂–∏–¥–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ."

        import random
        selected = random.sample(all_exercises, k=min(count, len(all_exercises)))
        result = []

        for ex in selected:
            name = await translate_async(ex.get("name", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"))
            equipment = await translate_async(ex.get("equipment", "—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ç–µ–ª–æ"))
            body_part = await translate_async(ex.get("bodyPart", "–≤—Å—ë —Ç–µ–ª–æ"))
            result.append(f"üî∏ <b>{name}</b> ({body_part}, {equipment})")

        return "\n".join(result)

    except Exception as e:
        return f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: {e}"

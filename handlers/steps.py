from aiogram import Router, types
from aiogram.filters import Command

router = Router()


@router.message(Command("enable_steps"))
async def enable_steps(message: types.Message):
    text = (
        "üì± –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —à–∞–≥–æ–≤ —Å–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:\n"
        "‚Ä¢ Google Fit ‚Äî –¥–ª—è Android –∏ iOS: https://play.google.com/store/apps/details?id=com.google.android.apps.fitness\n"
        "‚Ä¢ Apple Health ‚Äî –≤—Å—Ç—Ä–æ–µ–Ω–æ –Ω–∞ iPhone.\n\n"
        "üö∂‚Äç‚ôÇÔ∏è –ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Å–º–æ—Ç—Ä–∏ —à–∞–≥–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ –∏—Ö —Å –ø–æ–º–æ—â—å—é /steps [–∫–æ–ª-–≤–æ_—à–∞–≥–æ–≤].\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: /steps 8500\n"
        "–Ø —Ä–∞—Å—Å—á–∏—Ç–∞—é, —Å–∫–æ–ª—å–∫–æ —Ç—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª –∫–∞–ª–æ—Ä–∏–π!")
    await message.answer(text)


@router.message(Command("steps"))
async def steps(message: types.Message):
    try:
        steps = int(message.text.split(maxsplit=1)[1])
        calories = round(steps * 0.045, 1)  # –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞
        text = (
            f"üéØ –¢—ã –ø—Ä–æ—à—ë–ª {steps} —à–∞–≥–æ–≤!\n"
            f"üî• –ü—Ä–∏–º–µ—Ä–Ω–æ —Å–∂—ë–≥ {calories} –∫–∫–∞–ª.\n\n"
            "–ú–æ–ª–æ–¥–µ—Ü! –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.\n"
            "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏ Google Fit –∏–ª–∏ Apple Health, —Å–º–æ—Ç—Ä–∏ —à–∞–≥–∏ —Ç–∞–º –∏ —Å–æ–æ–±—â–∞–π –º–Ω–µ!"
        )
    except (IndexError, ValueError):
        text = "‚ùó –í–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã: /steps 8500"
    await message.answer(text)
